# -*- coding: utf-8 -*-
"""data-_spotify.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L9-X-1L2IxaRM-9PpJXDSnlZJKRoJe8w
"""

#import library
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#uploding the dataset
dataset_tracks= pd.read_csv('/content/tracks.csv')
dataset_tracks.head()

# les valeur null
pd.isnull(dataset_tracks).sum()

#information des données de la dataset
dataset_tracks.info()

#trie de la dataset par la popularité
df= dataset_tracks.sort_values('popularity',ascending= True).head()
df

#statistiques descriptives pour chaque colonne
dataset_tracks.describe().transpose()

#top 10 popular music
most_popular = dataset_tracks.query('popularity>90',inplace=False).sort_values('popularity',ascending= False)
most_popular[:10]

dataset_tracks.set_index("release_date",inplace= True)
dataset_tracks.index= pd.to_datetime(dataset_tracks.index)
dataset_tracks.head()

dataset_tracks[["artists"]].iloc[18]

dataset_tracks["duration"]=dataset_tracks["duration_ms"].apply(lambda x: round(x/1000))
dataset_tracks.drop("duration_ms", inplace = True ,axis= 1)

dataset_tracks.duration.head()

corr_df= dataset_tracks.drop(["key","mode","explicit"], axis=1 ).corr(method="pearson")
plt.figure(figsize=(14,6))
heatmap=sns.heatmap(corr_df,annot=True, fmt=".1g",vmin=-1 ,vmax=1 ,center=0 , cmap="inferno",linewidths=1 , linecolor="Black")
heatmap.set_title("Correlation HeatMap between variable")
heatmap.set_xticklabels(heatmap.get_xticklabels(), rotation = 90)

sample_df= dataset_tracks.sample(int(0.004*len(dataset_tracks)))
print(len(sample_df))

#loundness vs energy correlation
plt.figure(figsize=(10,6))
sns.regplot(data= sample_df , y="loudness",x="energy",color="c").set(title = " loundness vs energy correlation ")

#popularity vs  acousticness
plt.figure(figsize=(10,6))
sns.regplot(data= sample_df , y="popularity",x="acousticness",color="b").set(title = " popularity vs  acousticness ")

dataset_tracks['dates']= dataset_tracks.index.get_level_values('release_date')
dataset_tracks.dates=pd.to_datetime(dataset_tracks.dates)
years=dataset_tracks.dates.dt.year

pip install --user seaborn==0.11.0

#Number of songs per years
sns.displot(years,discrete=True, aspect=2 ,height=5 , kind="hist").set(title =" Number of songs per years")

total_dr = dataset_tracks.duration
fig_dims= (18,7)
fig, ax = plt.subplots(figsize=fig_dims)
fig= sns.barplot(x= years, y =total_dr ,ax= ax,errwidth= False).set(title="year vs Duration")
plt.xticks(rotation =90)

total_dr = dataset_tracks.duration
sns.set_style(style= "whitegrid")
fig_dims= (10,5)
fig, ax = plt.subplots(figsize=fig_dims)
fig= sns.lineplot(x= years, y =total_dr ,ax= ax).set(title="year vs Duration")
plt.xticks(rotation =60)

df_genre = pd.read_csv("/content/SpotifyFeatures.csv")
df_genre.head()

#Durée des chansons dans différents genres
plt.title("Duration od the songs in diffrebt geners")
sns.color_palette("rocket",as_cmap=True)
sns.barplot(y='genre',x='duration_ms',data= df_genre)
plt.xlabel("Duration in ms ")
plt.ylabel("Genres")

#top 5 genres by popularity
sns.set_style(style="darkgrid")
plt.figure(figsize=(10,5))
famous= df_genre.sort_values("popularity", ascending=False).head(10)
sns.barplot(y='genre',x='popularity',data=famous).set(title= "Top 5 Genres by Popularity")